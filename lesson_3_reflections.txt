When would you want to create a remote repository rather than keeping all your work local?

    Well it makes sense in various situations. If for example I want to work with others on a project, it makes totally sense to have a common repository where all programmers can have access to the latest status of the code. But also for safety reasons: if I have all files just on my computer at home and something happens, e.g. the hard drive "dies" or a fire destroys your home, well at least your lines of code are stored somnewhere outside your home.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    I can decide when to pull the changes, e.g. after one or several commits or after a larger modificationi of the code to have that changes save on Github

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Clone is a (ownstanding) copy of a repository. Fork is similar to clone, but still a connection to the original repository is kept. A branch is a path within a repository.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    ?? You might be able to check if history of the remote repository has changed while you were working offline...

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
